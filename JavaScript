// Mobile Menu Toggle
        document.querySelector('.mobile-menu').addEventListener('click', function() {
            document.querySelector('nav ul').classList.toggle('active');
        });

        // Close mobile menu when clicking on a link
        document.querySelectorAll('nav ul li a').forEach(link => {
            link.addEventListener('click', function() {
                document.querySelector('nav ul').classList.remove('active');
            });
        });

        // Form Submission with Email Functionality
        document.getElementById('contactForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const submitBtn = document.getElementById('submitBtn');
            const notification = document.getElementById('notification');
            
            // Get form data
            const formData = {
                name: document.getElementById('name').value,
                email: document.getElementById('email').value,
                phone: document.getElementById('phone').value,
                message: document.getElementById('message').value
            };

            // Show loading state
            submitBtn.disabled = true;
            submitBtn.textContent = 'Sending...';

            try {
                // Send email using EmailJS (you'll need to set this up)
                const response = await sendEmail(formData);
                
                // Show success message
                notification.textContent = 'Thank you for your message! We will get back to you soon.';
                notification.className = 'notification success';
                notification.style.display = 'block';
                
                // Reset form
                this.reset();
                
            } catch (error) {
                // Show error message
                notification.textContent = 'Sorry, there was an error sending your message. Please try again or contact us directly.';
                notification.className = 'notification error';
                notification.style.display = 'block';
                console.error('Error sending message:', error);
            } finally {
                // Reset button state
                submitBtn.disabled = false;
                submitBtn.textContent = 'Send Message';
                
                // Hide notification after 5 seconds
                setTimeout(() => {
                    notification.style.display = 'none';
                }, 5000);
            }
        });

        // Email sending function using EmailJS
        async function sendEmail(formData) {
            // Method 1: Using EmailJS (Recommended - Free tier available)
            // You need to sign up at https://emailjs.com and get your credentials
            // Replace these with your actual EmailJS credentials
            const emailjsConfig = {
                serviceId: 'YOUR_SERVICE_ID', // Replace with your EmailJS service ID
                templateId: 'YOUR_TEMPLATE_ID', // Replace with your EmailJS template ID
                publicKey: 'YOUR_PUBLIC_KEY' // Replace with your EmailJS public key
            };

            // If EmailJS is configured, use it
            if (emailjsConfig.serviceId !== 'YOUR_SERVICE_ID') {
                // Load EmailJS library dynamically if not already loaded
                if (typeof emailjs === 'undefined') {
                    await loadScript('https://cdn.jsdelivr.net/npm/@emailjs/browser@3/dist/email.min.js');
                    emailjs.init(emailjsConfig.publicKey);
                }

                return await emailjs.send(
                    emailjsConfig.serviceId,
                    emailjsConfig.templateId,
                    {
                        from_name: formData.name,
                        from_email: formData.email,
                        phone: formData.phone,
                        message: formData.message,
                        to_email: 'abubakarshaikhoffical@gmail.com'
                    }
                );
            } else {
                // Method 2: Fallback - Form submission to Formspree (Free alternative)
                // This will redirect to Formspree but works without backend
                const formspreeUrl = `https://formspree.io/f/${btoa('abubakarshaikhoffical@gmail.com')}`;
                
                const response = await fetch(formspreeUrl, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: formData.name,
                        email: formData.email,
                        phone: formData.phone,
                        message: formData.message,
                        _subject: `New Contact Message from ${formData.name} - Yasir Construction`
                    })
                });

                if (!response.ok) {
                    throw new Error('Form submission failed');
                }

                return response;
            }
        }

        // Helper function to load scripts dynamically
        function loadScript(src) {
            return new Promise((resolve, reject) => {
                const script = document.createElement('script');
                script.src = src;
                script.onload = resolve;
                script.onerror = reject;
                document.head.appendChild(script);
            });
        }

        // Alternative simple method using mailto (works without any setup)
        function sendEmailSimple(formData) {
            const subject = `New Contact Message from ${formData.name}`;
            const body = `Name: ${formData.name}%0D%0AEmail: ${formData.email}%0D%0APhone: ${formData.phone}%0D%0AMessage: ${formData.message}`;
            
            window.location.href = `mailto:abubakarshaikhoffical@gmail.com?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;
            
            return Promise.resolve();
        }

        // Smooth scrolling for anchor links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                
                const targetId = this.getAttribute('href');
                if(targetId === '#') return;
                
                const targetElement = document.querySelector(targetId);
                if(targetElement) {
                    window.scrollTo({
                        top: targetElement.offsetTop - 80,
                        behavior: 'smooth'
                    });
                }
            });
        });

        // Header background change on scroll
        window.addEventListener('scroll', function() {
            const header = document.querySelector('header');
            if(window.scrollY > 100) {
                header.style.background = 'rgba(44, 62, 80, 0.95)';
            } else {
                header.style.background = 'var(--primary)';
            }
        });
